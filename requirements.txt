################################################################
#
# Python package requirements for the TensorFlow Tutorials:
# https://github.com/Hvass-Labs/TensorFlow-Tutorials
#
# If you are using Anaconda then you can install all required
# Python packages by running the following commands in a shell:
#
#     conda create --name tf python=3
#     pip install -r requirements.txt
#
# Note that you have to edit this file to select whether you
# want to install the CPU or GPU version of TensorFlow.
#
################################################################
# Basic packages used in many of the tutorials.

numpy
scipy
jupyter
matplotlib
Pillow
scikit-learn
pandas
opencv-python
Cython
h5py

################################################################
# TensorFlow can be installed either as CPU or GPU versions.
# You select which one to install by (un)commenting these lines.

tensorflow==1.4.0	        # CPU Version of TensorFlow.
tensorflow-gpu==1.4.0 	    # GPU version of TensorFlow.

keras==2.1.3 # keras api wrapper using tensorflow backend

# Builder API for TensorFlow used in many of the tutorials.
prettytensor

################################################################
# The tutorial on Reinforcement Learning uses OpenAI Gym.
# Uncomment this line if you want to run that tutorial.

# gym[atari]

################################################################
# Custom libraries for keras.

# keras-resnet

################################################################
# Web service endpoint and web host.

# Flask is a microframework for Python based on Werkzeug, 
# Jinja 2 and good intentions (BSD licensed).
flask

# Open source (BSD licensed), in-memory data structure store, 
# used as a database, cache and message broker.
redis

# Handle request parameters
requests
